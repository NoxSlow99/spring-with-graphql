# Only consults (Query)
type Query {
    # Student
    findStudentsById(StudentId : String) : Student
    findAllStudents : [Student]

    # Course
    findCourseById(courseId : String) : Course,
    findAllCourses : [Course]
}

type Mutation {
    # Student
    createStudent(inputStudent : InputStudent!) : Student,
    deleteStudentById(studentId : String) : String

    # Course
    createCourse(inputCourse : InputCourse) : Course
    deleteCourseById(courseId : String) : String
}

type Student {
    id : ID,
    name : String,
    lastName : String,
    age : Int,
    course : Course
}

type Course {
    id : ID,
    name : String,
    category : String,
    teacher : String
}

input InputStudent {
    name : String,
    lastName : String,
    age : Int,
    courseId : String!
}

input InputCourse {
    name : String,
    category : String,
    teacher : String
}